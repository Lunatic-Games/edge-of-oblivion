name: Godot Build

on:
  workflow_call:
    inputs:
      debug:
        type: boolean
        required: false
        default: true
      godot_version:
        type: string
        required: true 
      export_name:
        type: string
        required: true 
        description: The name of the exported binary (appended with '-debug' if debug is set to true)
      windows:
        type: boolean
        required: false 
        default: true
        description: Should a Windows binary be generated
      windows_preset:
        type: string
        required: false 
        default: 'Windows Desktop'  
      linux:
        type: boolean
        required: false 
        default: true
        description: Should a Linux binary be generated
      linux_preset:
        type: string
        required: false 
        default: 'Linux/X11 Desktop'          
      project_path:
        type: string
        required: false 
        default: '.'
      export_presets_path:
        type: string
        required: false 
        default: '.'
        description: Relative to the project path
        
env:
  GODOT_VERSION: ${{ inputs.godot_version }}
  EXPORT_NAME: ${{ inputs.export_name }}${{ inputs.debug && '-debug' || '' }}
  PROJECT_PATH: ${{ inputs.project_path }}
  EXPORT_PRESETS_PATH: ${{ inputs.export_presets_path }}

jobs:
  set_tag:
    name: Set godot-ci tag
    runs-on: ubuntu-latest
    outputs:
      godot_ci_tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - id: set_tag
        run: echo "tag=$GODOT_VERSION" >> $GITHUB_OUTPUT
        
  windows_export:
    name: Export for Windows
    runs-on: ubuntu-latest
    if: inputs.windows
    defaults:
      run:
        shell: bash
    needs: set_tag
    container:
      image: barichello/godot-ci:${{ needs.set_tag.outputs.godot_ci_tag }}
    env:
      WINDOWS_PRESET: ${{ inputs.windows_preset }}
      DEBUG: ${{ inputs.debug }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true          
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          if [ ! -f "$PROJECT_PATH/$EXPORT_PRESETS_PATH/export_presets.cfg" ];
          then 
            mv $PROJECT_PATH/$EXPORT_PRESETS_PATH/export_presets.cfg $PROJECT_PATH/export_presets.cfg;
          fi
      - name: Build for windows
        run: |
          mkdir -v -p ${PROJECT_PATH}/build/windows
          godot_command=(godot -v --path $PROJECT_PATH --headless)
          if $DEBUG == 'true'; 
          then
            godot_command+=(--export-debug);
          else 
            godot_command+=(--export-release); 
          fi
          godot_command+=($PROJECT_PATH/build/windows/$EXPORT_NAME.exe)
          "${godot_command[@]}" | tee $EXPORT_NAME.output
      - name: Check for build errors
        shell: bash
        run: |
          BUILD_ERRORS=("ERROR: Can't open project" "ERROR: Cannot export project")
          for ((i = 0; i < ${#BUILD_ERRORS[@]}; i++))
          do
            if grep -q "${BUILD_ERRORS[$i]}" $EXPORT_NAME.output
            then
              echo "Found error ${BUILD_ERRORS[$i]} in Godot build output"
              exit 1
            fi
          done
      - name: Upload windows artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: windows-${{ env.EXPORT_NAME }}
          path: ${{ env.PROJECT_PATH }}/build/windows
          
  linux_export:
    name: Export for Linux
    runs-on: ubuntu-latest
    if: inputs.linux
    defaults:
      run:
        shell: bash
    needs: set_tag
    container:
      image: barichello/godot-ci:${{ needs.set_tag.outputs.godot_ci_tag }}
    env:
      LINUX_PRESET: ${{ inputs.linux_preset }}
      DEBUG: ${{ inputs.debug }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true          
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          if [ ! -f "$PROJECT_PATH/$EXPORT_PRESETS_PATH/export_presets.cfg" ];
          then 
            mv $PROJECT_PATH/$EXPORT_PRESETS_PATH/export_presets.cfg $PROJECT_PATH/export_presets.cfg;
          fi
      - name: Build for windows
        run: |
          mkdir -v -p ${PROJECT_PATH}/build/linux
          godot_command=(godot -v --path $PROJECT_PATH --headless)
          if $DEBUG == 'true'; 
          then
            godot_command+=(--export-debug); 
          else 
            godot_command+=(--export-release); 
          fi
          godot_command+=($PROJECT_PATH/build/windows/$EXPORT_NAME.exe)
          "${godot_command[@]}" | tee $EXPORT_NAME.output
      - name: Check for build errors
        shell: bash
        run: |
          BUILD_ERRORS=("ERROR: Can't open project" "ERROR: Cannot export project")
          for ((i = 0; i < ${#BUILD_ERRORS[@]}; i++))
          do
            if grep -q "${BUILD_ERRORS[$i]}" $EXPORT_NAME.output
            then
              echo "Found error ${BUILD_ERRORS[$i]} in Godot build output"
              exit 1
            fi
          done
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: linux-${{ env.EXPORT_NAME }}
          path: ${{ env.PROJECT_PATH }}/build/linux
