name: Build Debug Enabled Executables

on:
  push:
    branches: [ "master" ]
        
env:
  GODOT_VERSION: 4.0.3
  EXPORT_NAME: "${{ github.event.repository.name }}-debug"
  PROJECT_PATH: "."
  NUM_OF_HISTORICAL_ARTIFACTS_TO_KEEP: 1

jobs:
  set_tag:
    name: Set godot-ci tag
    runs-on: ubuntu-latest
    outputs:
      godot_ci_tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - id: set_tag
        run: echo "tag=$GODOT_VERSION" >> $GITHUB_OUTPUT
        
  export:
    name: Export from Godot
    runs-on: ubuntu-latest
    needs: set_tag
    container:
      image: barichello/godot-ci:${{ needs.set_tag.outputs.godot_ci_tag }}
    env:
      WINDOWS_PRESET: Windows Desktop
      BUILD_ERRORS: > 
        ( "ERROR: Can't open project" "ERROR: Cannot export project" )
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true          
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          cp .github/workflows/export_presets.cfg ${PROJECT_PATH}/export_presets.cfg
      - name: Build for windows
        run: |
          mkdir -v -p ${PROJECT_PATH}/build/windows
          godot -v --path $PROJECT_PATH --headless --export-debug "${WINDOWS_PRESET}" build/windows/$EXPORT_NAME.exe | tee $EXPORT_NAME.output
      - name: Check for errors
        run: |
          #!/bin/bash
          i=0
          max=2
          while [ $i -lt $max ]
          do
            if ( grep -q "${BUILD_ERRORS[$i]}" $EXPORT_NAME.output )
            then
              echo "Found error ${BUILD_ERRORS[$i]} in Godot build output"
              exit 1
            fi
            i=$(( i + 1 ))
          done
      - name: Upload windows artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: windows-${{ env.EXPORT_NAME }}
          path: ${{ env.PROJECT_PATH }}/build/windows

  clean:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    needs: export
    steps:
      - name: Find and delete old artifacts
        uses: actions/github-script@v6
        id: delete-artifacts
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

            const allArtifacts = res.data.artifacts
                    .sort( (a,b) => (new Date(a.created_at)) - (new Date(b.created_at)) );

            //console.log(JSON.stringify(allArtifacts));

            const artifactsToDelete = allArtifacts
                    .slice(0, -${{ env.NUM_OF_HISTORICAL_ARTIFACTS_TO_KEEP }})
                    .filter(({ name }) => name.endsWith('${{ env.EXPORT_NAME }}'))

            //console.log(JSON.stringify(artifactsToDelete));

            artifactsToDelete.forEach(({ id }) => {
               github.rest.actions.deleteArtifact({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 artifact_id: id,
               })
              })
              
            return artifactsToDelete
            
      - name: Print deleted artifacts
        run: echo "${{steps.delete-artifacts.outputs.result}}"
